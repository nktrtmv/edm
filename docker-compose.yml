services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: >-
        edm_document_notifier_request:1:1,
        edm_entities_approval_workflows_requests:1:1,
        edm_entities_signing_workflows_requests:1:1,
        edm_document_generator_events:1:1,
        edm_entities_approval_workflows_results:1:1,
        edm_entities_signing_workflows_results:1:1,
        edm_entities_signing_workflows_events:1:1,
        edm_document_searcher_events:1:1,
        edm_entities_approval_workflows_events:1:1,
    ports:
      - "9092:9092"
    expose:
      - 9093
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9093", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 1010:1010
    volumes:
      - ./kui/kafka_ui_config.yml:/application.yml
    depends_on:
      kafka:
        condition: service_healthy
  
  edm-document-classifier:
    container_name: edm-document-classifier
    build:
      context: ./edm-document-classifier
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    depends_on:
      - edm-document-classifier-postgres

  edm-document-classifier-postgres:
    container_name: edm-document-classifier-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-document-classifier"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7001:5432"

  edm-document-classifier-postgres-migrator:
    container_name: edm-document-classifier-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-document-classifier/src/Edm.Document.Classifier.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-document-classifier-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-document-classifier-postgres user=postgres password=postgres dbname=edm-document-classifier sslmode=disable' up
      "
    depends_on:
      - edm-document-classifier-postgres
  
  edm-document-generator:
    container_name: edm-document-generator
    build:
      context: ./edm-document-generator
      dockerfile: Dockerfile
    ports:
      - 5004:5004
    depends_on:
      edm-document-classifier:
        condition: service_started
      edm-entities-signing-workflows:
        condition: service_started
      edm-entities-approval-workflows:
        condition: service_started
      edm-document-generator-postgres:
        condition: service_started
      edm-entities-counters:
        condition: service_started
      edm-entities-approval-rules:
        condition: service_started
      kafka:
        condition: service_healthy

  edm-document-generator-postgres:
    container_name: edm-document-generator-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-document-generator"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7004:5432"

  edm-document-generator-postgres-migrator:
    container_name: edm-document-generator-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-document-generator/src/Edm.DocumentGenerators.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-document-generator-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-document-generator-postgres user=postgres password=postgres dbname=edm-document-generator sslmode=disable' up
      "
    depends_on:
      - edm-document-generator-postgres

  edm-document-searcher:
    container_name: edm-document-searcher
    build:
      context: ./edm-document-searcher
      dockerfile: Dockerfile
    ports:
      - 5003:5003
    depends_on:
      edm-document-searcher-postgres:
        condition: service_started
      kafka:
        condition: service_healthy

  edm-document-searcher-postgres:
    container_name: edm-document-searcher-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-document-searcher"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7003:5432"

  edm-document-searcher-postgres-migrator:
    container_name: edm-document-searcher-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-document-searcher/src/Edm.Document.Searcher.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-document-searcher-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-document-searcher-postgres user=postgres password=postgres dbname=edm-document-searcher sslmode=disable' up
      "
    depends_on:
      - edm-document-searcher-postgres

  edm-entities-approval-rules:
    container_name: edm-entities-approval-rules
    build:
      context: ./edm-entities-approval-rules
      dockerfile: Dockerfile
    ports:
      - 5006:5006
    depends_on:
      - edm-entities-approval-rules-postgres
      - edm-document-classifier

  edm-entities-approval-rules-postgres:
    container_name: edm-entities-approval-rules-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-entities-approval-rules"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7006:5432"

  edm-entities-approval-rules-postgres-migrator:
    container_name: edm-entities-approval-rules-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-entities-approval-rules/src/Edm.Entities.Approval.Rules.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-entities-approval-rules-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-entities-approval-rules-postgres user=postgres password=postgres dbname=edm-entities-approval-rules sslmode=disable' up
      "
    depends_on:
      - edm-entities-approval-rules-postgres

  edm-entities-approval-workflows:
    container_name: edm-entities-approval-workflows
    build:
      context: ./edm-entities-approval-workflows
      dockerfile: Dockerfile
    ports:
      - 5007:5007
    depends_on:
      edm-entities-approval-workflows-postgres:
        condition: service_started
      kafka:
        condition: service_healthy

  edm-entities-approval-workflows-postgres:
    container_name: edm-entities-approval-workflows-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-entities-approval-workflows"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7007:5432"

  edm-entities-approval-workflows-postgres-migrator:
    container_name: edm-entities-approval-workflows-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-entities-approval-workflows/src/Edm.Entities.Approval.Workflows.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-entities-approval-workflows-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-entities-approval-workflows-postgres user=postgres password=postgres dbname=edm-entities-approval-workflows sslmode=disable' up
      "
    depends_on:
      - edm-entities-approval-workflows-postgres
  
  edm-entities-counters:
    container_name: edm-entities-counters
    build:
      context: ./edm-entities-counters
      dockerfile: Dockerfile
    ports:
      - 5005:5005
    depends_on:
      - edm-entities-counters-postgres

  edm-entities-counters-postgres:
    container_name: edm-entities-counters-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-entities-counters"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7005:5432"

  edm-entities-counters-postgres-migrator:
    container_name: edm-entities-counters-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-entities-counters/src/Edm.Entities.Counters.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-entities-counters-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-entities-counters-postgres user=postgres password=postgres dbname=edm-entities-counters sslmode=disable' up
      "
    depends_on:
      - edm-entities-counters-postgres

  edm-entities-signing-workflows:
    container_name: edm-entities-signing-workflows
    build:
      context: ./edm-entities-signing-workflows
      dockerfile: Dockerfile
    ports:
      - 5008:5008
    depends_on:
      edm-entities-signing-workflows-postgres:
        condition: service_started
      kafka:
        condition: service_healthy

  edm-entities-signing-workflows-postgres:
    container_name: edm-entities-signing-workflows-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "edm-entities-signing-workflows"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7008:5432"

  edm-entities-signing-workflows-postgres-migrator:
    container_name: edm-entities-signing-workflows-postgres-migrator
    build:
      dockerfile: Dockerfile
    volumes:
      - ./edm-entities-signing-workflows/src/Edm.Entities.Signing.Workflows.Infrastructure/Migrations/:/migrations/
    command: >
      /bin/bash -c "
        dockerize -wait tcp://edm-entities-signing-workflows-postgres:5432 -timeout 1m &&
        goose -dir=/migrations postgres 'host=edm-entities-signing-workflows-postgres user=postgres password=postgres dbname=edm-entities-signing-workflows sslmode=disable' up
      "
    depends_on:
      - edm-entities-signing-workflows-postgres
  
  edm-document-generator-gateway:
    restart: always
    container_name: edm-document-generator-gateway
    build:
      context: ./edm-document-generator-gateway
      dockerfile: Dockerfile
    ports:
      - 5009:5009
    depends_on:
      - edm-document-generator
      - edm-document-searcher
  
  edm-entities-approval-rules-gateway:
    restart: always
    container_name: edm-entities-approval-rules-gateway
    build:
      context: ./edm-entities-approval-rules-gateway
      dockerfile: Dockerfile
    ports:
      - 5010:5010
    depends_on:
      - edm-entities-approval-rules